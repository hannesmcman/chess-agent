{"version":3,"sources":["ai/alpha-beta.js","views/human-vs-ai.js","App.js","serviceWorker.js","index.js"],"names":["PIECE_VALUE","p","n","b","r","q","k","getBestMove","gameState","maxDepth","isWhite","fen","parseInt","length","alphabetaRoot","OpeningExplorer","analyze","master","variant","speeds","then","analysis","moves","Math","floor","random","san","catch","numPos","newGameMoves","bestMove","maxBy","move","value","alphabeta","depth","alpha","beta","isMaximizingPlayer","game_over","boardSum","reduce","SQUARES","sum","square","squareState","get","color","type","heuristic","Number","NEGATIVE_INFINITY","ugly_moves","i","ugly_move","max","undo","POSITIVE_INFINITY","min","console","log","HumanVsAI","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","dropSquareStyle","squareStyles","pieceSquare","history","boardWidth","window","innerWidth","game","undefined","updateDimensions","setState","removeHighlightSquare","_ref","squareStyling","highlightSquare","sourceSquare","squaresToHighlight","highlightStyles","toConsumableArray","a","c","objectSpread","defineProperty","background","_ref2","onDrop","_ref3","targetSquare","from","to","promotion","Promise","resolve","updateHistory","setTimeout","makeAIMove","asyncToGenerator","regenerator_default","mark","_callee","d","aiMove","d2","wrap","_context","prev","next","resetGame","props","userColor","Date","getTime","sent","stop","Chess","allowDrag","_ref5","piece","verbose","_ref6","onMouseOverSquare","push","onMouseOutSquare","inherits","createClass","key","_this2","addEventListener","removeEventListener","_this$state","react_default","createElement","chessboard_min_default","boardStyle","borderRadius","boxShadow","id","onSquareClick","position","width","Component","_ref7","backgroundColor","options","label","App","inGame","handleSubmit","handleChange","style","styles","boardsContainer","human_vs_ai_HumanVsAI","container","dialogue","select","react_select_esm","className","onChange","reactstrap_es","onClick","display","justifyContent","alignItems","flexWrap","marginTop","marginBottom","height","textAlign","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","targetElement","disableBodyScroll","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2c868c5.chunk.js","sourcesContent":["import reduce from 'lodash/reduce'\nimport maxBy from 'lodash/maxBy'\nimport OpeningExplorer from 'lichess-opening-explorer'\n\nconst PIECE_VALUE = {\n\tp: 10,\n\tn: 30,\n\tb: 30,\n\tr: 50,\n\tq: 90,\n\tk: 900,\n}\n\nexport function getBestMove(gameState, maxDepth, isWhite) {\n\tconst fen = gameState.fen()\n\tif (parseInt(fen[fen.length - 1]) > 3) {\n\t\treturn alphabetaRoot(gameState, maxDepth, isWhite)\n\t}\n\tconst explorer = new OpeningExplorer()\n\treturn explorer\n\t\t.analyze(fen, {\n\t\t\tmaster: true,\n\t\t\tvariant: 'standard',\n\t\t\tspeeds: ['classical'],\n\t\t})\n\t\t.then(analysis => {\n\t\t\t// console.log(analysis)\n\t\t\tconst {moves} = analysis\n\t\t\treturn moves[Math.floor(Math.random() * moves.length)].san\n\t\t})\n\t\t.catch(() => {\n\t\t\treturn alphabetaRoot(gameState, maxDepth, isWhite)\n\t\t})\n}\n\nlet numPos = 0\n\nexport function alphabetaRoot(gameState, maxDepth, isWhite) {\n\tconst newGameMoves = gameState.moves()\n\tconst bestMove = maxBy(newGameMoves, move => {\n\t\tgameState.move(move)\n\t\tconst value = alphabeta(\n\t\t\tgameState,\n\t\t\tmaxDepth - 1,\n\t\t\tNumber.NEGATIVE_INFINITY,\n\t\t\tNumber.POSITIVE_INFINITY,\n\t\t\tfalse,\n\t\t\tisWhite,\n\t\t)\n\t\tgameState.undo()\n\t\t// console.log(move, value)\n\t\treturn value\n\t})\n\tconsole.log('Positions evaluated: ', numPos)\n\treturn bestMove\n}\n\nexport function alphabeta(\n\tgameState,\n\tdepth,\n\talpha,\n\tbeta,\n\tisMaximizingPlayer,\n\tisWhite,\n) {\n\tnumPos++\n\tif (depth === 0 || gameState.game_over()) {\n\t\treturn heuristic(gameState, isWhite)\n\t}\n\tif (isMaximizingPlayer) {\n\t\tlet value = Number.NEGATIVE_INFINITY\n\t\tconst moves = gameState.ugly_moves()\n\t\tfor (let i = 0; i < moves.length; i++) {\n\t\t\tgameState.ugly_move(moves[i])\n\t\t\tvalue = Math.max(\n\t\t\t\tvalue,\n\t\t\t\talphabeta(\n\t\t\t\t\tgameState,\n\t\t\t\t\tdepth - 1,\n\t\t\t\t\talpha,\n\t\t\t\t\tbeta,\n\t\t\t\t\t!isMaximizingPlayer,\n\t\t\t\t\tisWhite,\n\t\t\t\t),\n\t\t\t)\n\t\t\tgameState.undo()\n\t\t\talpha = Math.max(alpha, value)\n\t\t\tif (alpha >= beta) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn value\n\t} else {\n\t\tlet value = Number.POSITIVE_INFINITY\n\t\tconst moves = gameState.ugly_moves()\n\t\tfor (let i = 0; i < moves.length; i++) {\n\t\t\tgameState.ugly_move(moves[i])\n\t\t\tvalue = Math.min(\n\t\t\t\tvalue,\n\t\t\t\talphabeta(\n\t\t\t\t\tgameState,\n\t\t\t\t\tdepth - 1,\n\t\t\t\t\talpha,\n\t\t\t\t\tbeta,\n\t\t\t\t\t!isMaximizingPlayer,\n\t\t\t\t\tisWhite,\n\t\t\t\t),\n\t\t\t)\n\t\t\tgameState.undo()\n\t\t\tbeta = Math.min(beta, value)\n\t\t\tif (alpha >= beta) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\treturn value\n\t}\n}\n\nfunction heuristic(gameState, isWhite) {\n\tconst boardSum = reduce(\n\t\tgameState.SQUARES,\n\t\t(sum, square) => {\n\t\t\tconst squareState = gameState.get(square)\n\t\t\tif (squareState === null) {\n\t\t\t\treturn sum\n\t\t\t}\n\t\t\tconst value =\n\t\t\t\tsquareState.color === 'w'\n\t\t\t\t\t? PIECE_VALUE[squareState.type]\n\t\t\t\t\t: -PIECE_VALUE[squareState.type]\n\t\t\treturn sum + value\n\t\t},\n\t\t0,\n\t)\n\treturn isWhite ? boardSum : -boardSum\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport Chess from 'chess.js'\nimport {getBestMove} from '../ai/alpha-beta'\nimport Chessboard from 'chessboardjsx'\n\nexport class HumanVsAI extends Component {\n\tstatic propTypes = {children: PropTypes.func, userColor: PropTypes.string}\n\n\tstate = {\n\t\tfen: 'start',\n\t\t// square styles for active drop square\n\t\tdropSquareStyle: {},\n\t\t// custom square styles\n\t\tsquareStyles: {},\n\t\t// square with the currently clicked piece\n\t\tpieceSquare: '',\n\t\t// currently clicked square\n\t\tsquare: '',\n\t\t// array of past game moves\n\t\thistory: [],\n\t\tboardWidth: window.innerWidth - 100,\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.game = new Chess()\n\t\twindow.addEventListener('resize', this.updateDimensions)\n\t\tif (this.props.userColor === 'black') {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.makeAIMove()\n\t\t\t}, 500)\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.updateDimensions)\n\t}\n\n\tgame = undefined\n\n\tupdateDimensions = () => {\n\t\tthis.setState(() => ({boardWidth: window.innerWidth / 2}))\n\t}\n\n\t// keep clicked square style and remove hint squares\n\tremoveHighlightSquare = () => {\n\t\tthis.setState(({pieceSquare, history}) => ({\n\t\t\tsquareStyles: squareStyling({pieceSquare, history}),\n\t\t}))\n\t}\n\n\t// show possible moves\n\thighlightSquare = (sourceSquare, squaresToHighlight) => {\n\t\tconst highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\n\t\t\t(a, c) => {\n\t\t\t\treturn {\n\t\t\t\t\t...a,\n\t\t\t\t\t...{\n\t\t\t\t\t\t[c]: {\n\t\t\t\t\t\t\tbackground: 'rgba(50,205,50,0.4)',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t...squareStyling({\n\t\t\t\t\t\thistory: this.state.history,\n\t\t\t\t\t\tpieceSquare: this.state.pieceSquare,\n\t\t\t\t\t}),\n\t\t\t\t}\n\t\t\t},\n\t\t\t{},\n\t\t)\n\n\t\tthis.setState(({squareStyles}) => ({\n\t\t\tsquareStyles: {...squareStyles, ...highlightStyles},\n\t\t}))\n\t}\n\n\tonDrop = ({sourceSquare, targetSquare}) => {\n\t\t// see if the move is legal\n\t\tlet move = this.game.move({\n\t\t\tfrom: sourceSquare,\n\t\t\tto: targetSquare,\n\t\t\tpromotion: 'q', // always promote to a queen for example simplicity\n\t\t})\n\n\t\t// illegal move\n\t\tif (move === null) return\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.setState(() => ({\n\t\t\t\tfen: this.game.fen(),\n\t\t\t}))\n\t\t\tresolve()\n\t\t\tthis.updateHistory()\n\t\t}).then(() =>\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.makeAIMove()\n\t\t\t}, 500),\n\t\t)\n\t}\n\n\tmakeAIMove = async () => {\n\t\tif (this.game.game_over()) {\n\t\t\t// console.log('GAME OVER')\n\t\t\tthis.resetGame()\n\t\t}\n\t\t// const aiMove = getRandomMove(game)\n\t\tconst isWhite = this.props.userColor === 'black'\n\t\tconst d = new Date().getTime()\n\t\tconst aiMove = await getBestMove(this.game, 4, isWhite)\n\t\tconst d2 = new Date().getTime()\n\t\tconsole.log('Time: ', (d2 - d) / 1000)\n\t\tthis.game.move(aiMove)\n\t\tthis.setState(() => ({\n\t\t\tfen: this.game.fen(),\n\t\t}))\n\t\tthis.updateHistory()\n\t}\n\n\tresetGame = () => {\n\t\tthis.game = new Chess()\n\t}\n\n\tallowDrag = ({piece}) => {\n\t\treturn piece[0] === this.props.userColor[0]\n\t}\n\n\tupdateHistory = () => {\n\t\tconst history = this.game.history({verbose: true})\n\t\tthis.setState(({pieceSquare}) => ({\n\t\t\thistory: history,\n\t\t\tsquareStyles: squareStyling({pieceSquare, history}),\n\t\t}))\n\t}\n\n\tonMouseOverSquare = square => {\n\t\t// get list of possible moves for this square\n\t\tlet moves = this.game.moves({\n\t\t\tsquare: square,\n\t\t\tverbose: true,\n\t\t})\n\n\t\t// exit if there are no moves available for this square\n\t\tif (moves.length === 0) return\n\n\t\tlet squaresToHighlight = []\n\t\tfor (let i = 0; i < moves.length; i++) {\n\t\t\tsquaresToHighlight.push(moves[i].to)\n\t\t}\n\n\t\tthis.highlightSquare(square, squaresToHighlight)\n\t}\n\n\tonMouseOutSquare = square => this.removeHighlightSquare(square)\n\n\trender() {\n\t\tconst {fen, dropSquareStyle, squareStyles, boardWidth} = this.state\n\n\t\treturn (\n\t\t\t<Chessboard\n\t\t\t\tallowDrag={this.allowDrag}\n\t\t\t\tboardStyle={{\n\t\t\t\t\tborderRadius: '5px',\n\t\t\t\t\tboxShadow: '0 5px 15px rgba(0, 0, 0, 0.5)',\n\t\t\t\t}}\n\t\t\t\tdropSquareStyle={dropSquareStyle}\n\t\t\t\tid=\"HumanVsAI\"\n\t\t\t\tonDrop={this.onDrop}\n\t\t\t\tonMouseOutSquare={this.onMouseOutSquare}\n\t\t\t\tonMouseOverSquare={this.onMouseOverSquare}\n\t\t\t\tonSquareClick={this.onMouseOverSquare}\n\t\t\t\tposition={fen}\n\t\t\t\tsquareStyles={squareStyles}\n\t\t\t\twidth={boardWidth}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nconst squareStyling = ({pieceSquare, history}) => {\n\tconst sourceSquare = history.length && history[history.length - 1].from\n\tconst targetSquare = history.length && history[history.length - 1].to\n\n\treturn {\n\t\t[pieceSquare]: {backgroundColor: 'rgba(255, 255, 0, 0.4)'},\n\t\t...(history.length && {\n\t\t\t[sourceSquare]: {\n\t\t\t\tbackgroundColor: 'rgba(255, 255, 0, 0.4)',\n\t\t\t},\n\t\t}),\n\t\t...(history.length && {\n\t\t\t[targetSquare]: {\n\t\t\t\tbackgroundColor: 'rgba(255, 255, 0, 0.4)',\n\t\t\t},\n\t\t}),\n\t}\n}\n","import React, {Component} from 'react'\nimport Select from 'react-select'\nimport {Button} from 'reactstrap'\nimport './App.css'\nimport {HumanVsAI} from './views/human-vs-ai'\n\nconst options = [\n\t{value: 'black', label: 'Black'},\n\t{value: 'white', label: 'White'},\n]\n\nclass App extends Component {\n\tstate = {\n\t\tinGame: false,\n\t\tuserColor: options[1],\n\t}\n\n\tcomponentDidMount() {}\n\n\thandleSubmit = () => {\n\t\tthis.setState(() => ({inGame: true}))\n\t}\n\n\thandleChange = userColor => {\n\t\tthis.setState(() => ({userColor}))\n\t}\n\n\trender() {\n\t\tif (!this.state.inGame) {\n\t\t\treturn (\n\t\t\t\t<div style={styles.container}>\n\t\t\t\t\t<div style={styles.dialogue}>\n\t\t\t\t\t\t<h1>Let&apos;s Play Chess!</h1>\n\t\t\t\t\t\t<div style={styles.select}>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tclassName=\"select\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\t\tvalue={this.state.userColor}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={styles.select}>\n\t\t\t\t\t\t\t<Button color=\"success\" onClick={this.handleSubmit}>\n\t\t\t\t\t\t\t\tPlay!\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<div style={styles.boardsContainer}>\n\t\t\t\t<HumanVsAI userColor={this.state.userColor.value} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n\nconst styles = {\n\tboardsContainer: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center',\n\t\tflexWrap: 'wrap',\n\t\twidth: '100vw',\n\t\tmarginTop: 30,\n\t\tmarginBottom: 50,\n\t},\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\theight: '100vh',\n\t},\n\tdialogue: {\n\t\twidth: '50vw',\n\t\ttextAlign: 'center',\n\t},\n\tselect: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tmarginBottom: 20,\n\t},\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA',\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {disableBodyScroll} from 'body-scroll-lock'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nconst targetElement = document.getElementById('root')\ndisableBodyScroll(targetElement)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}